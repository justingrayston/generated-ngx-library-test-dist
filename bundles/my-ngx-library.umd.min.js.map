{"version":3,"file":"my-ngx-library.umd.min.js","sources":["../../tmp/module/component/lib.component.ts","../../tmp/module/service/lib.service.ts","../../tmp/module/lib.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nexport class LibComponent {\n  description = 'Angular library built with ‚ù§ using ngx-library yeoman generator.';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'my-lib-component',\n  template: `\n    <div class=\"card\">\n      <div class=\"card-block\">\n        <h3 class=\"card-title\">Hello from <span class=\"highlight\">my-ngx-library</span> Angular Library!</h3>\n        <p class=\"card-text description\">{{description}}</p>\n        <a href=\"#\" class=\"btn btn-primary\">Component Button</a>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .title{font-size:2em}.highlight{background-color:green;opacity:.5}.description{color:grey;font-size:1em}\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LibComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nLibComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLibComponent.ctorParameters;\n/** @type {?} */\nLibComponent.prototype.description;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nexport class LibService {\nconstructor() { }\n/**\n * @param {?=} name\n * @return {?}\n */\nsayHello(name?: String) {\n    return `Hello ${name || 'Stanger'}!`;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LibService_tsickle_Closure_declarations() {\n/** @type {?} */\nLibService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLibService.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { LibComponent } from './component/lib.component';\nimport { LibService } from './service/lib.service';\n\n// Export module's public API\nexport { LibComponent } from './component/lib.component';\nexport { LibService } from './service/lib.service';\nexport class LibModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LibModule,\n      providers: [LibService]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  exports: [LibComponent],\n  declarations: [LibComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LibModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLibModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLibModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["this","type","Component","args","selector","template","styles","LibComponent","LibService","name","Injectable","LibModule","ngModule","providers","NgModule","imports","CommonModule","exports","declarations"],"mappings":"8SACA,kBAAA,aACEA,iBAEc,mEAqBhB,2BAnBEC,KAAMC,YAAWC,OADjBC,SAEU,mBADVC,SAEU,wUAOVC,QAEQ,0HAMTC,iBAAA,WAAA,SCtBD,kBACA,cAgBA,MAXAC,sBAAA,SAFGC,GAGC,MAFO,UAAAA,GAAiB,oCAG1BR,KAAMS,eAGPF,iBAAA,WAAA,SCHD,kBAAA,cAwBA,MArBGG,WACH,WACI,OACEC,SADUD,EAEVE,WADWL,yBAIfP,KAAMa,WAAUX,OAEhBY,SACEC,gBAEFC,SADSV,GAETW,cADcX,OAIfI,iBAAA,WAAA"}